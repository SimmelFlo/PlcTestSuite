<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{7dbbc5fe-66aa-4f70-a8be-dd1553a601dc}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	TestTester : TestTester;
	ReRun	   : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TestSuite.TestSuiteName := 'My Test Test-Suite';
Test_Counter_AddTwo();
Test_Counter_SubtractTwo();
Test_Bool();
Test_String();
Test_Lreal();
Test_Real();
IF ReRun THEN
	TestSuite.ReRunTests();
	ReRun := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="Test_Bool" Id="{0a23e9d2-f7ab-4c19-9735-98437bc044ae}">
      <Declaration><![CDATA[METHOD Test_Bool
VAR_INST
	Expected : BOOL;
	Actual	 : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := TRUE;
	Actual	 := TestTester.TestBool;
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_Counter_AddTwo" Id="{3d2e2d40-a28e-4d42-ab9e-06275a7cf9a4}">
      <Declaration><![CDATA[METHOD Test_Counter_AddTwo
VAR_INST
	Expected : DINT;
	Actual	 : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := 10;
	Actual	 := TestTester.AddTwo(5, 5);
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_Counter_SubtractTwo" Id="{82b2956c-4118-427f-a450-a3e1dcc4c03a}">
      <Declaration><![CDATA[METHOD Test_Counter_SubtractTwo
VAR_INST
	Expected : DINT;
	Actual	 : DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := 0;
	Actual	 := TestTester.AddTwo(5, -5);
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_Lreal" Id="{266c5293-e490-4751-a35d-7ca22f784c01}">
      <Declaration><![CDATA[METHOD Test_Lreal
VAR_INST
	Expected : LREAL;
	Actual	 : LREAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := 75.999;
	Actual	 := TestTester.TestLReal;
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual, 0.1);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_Real" Id="{bbcc2c62-b42d-486a-8ed5-5d1304721b84}">
      <Declaration><![CDATA[METHOD Test_Real
VAR_INST
	Expected : REAL;
	Actual	 : REAL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := 75.85;
	Actual	 := TestTester.TestLReal;
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual, 0.1);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Test_String" Id="{8bbef3dd-ba77-496f-9525-8caeed7f5a8b}">
      <Declaration><![CDATA[METHOD Test_String
VAR_INST
	Expected : STRING;
	Actual	 : STRING;
END_VAR
VAR
    SizeString : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF TestSuite.Test(__POUNAME()).ExecuteTest() THEN
	Expected := 'TestString';
	Actual	 := TestTester.TestString;
	TestSuite.Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>